#ifndef SPRITE_H
#define SPRITE_H

#include "gba.h"


enum PrimarySpriteID {
    PSPRITE_BOX_JEWEL_PIECE_NE,
    PSPRITE_BOX_JEWEL_PIECE_SE,
    PSPRITE_BOX_JEWEL_PIECE_SW,
    PSPRITE_BOX_JEWEL_PIECE_NW,
    PSPRITE_BOX_CD,
    PSPRITE_BOX_HEART_REFILL,
    PSPRITE_DIAMOND,
    PSPRITE_SWITCH,
    PSPRITE_KEYZER,
    PSPRITE_09,
    PSPRITE_0A,
    PSPRITE_0B,
    PSPRITE_0C,
    PSPRITE_LITTLE_HEART,
    PSPRITE_0E,
    PSPRITE_0F,
    PSPRITE_SHOPKEEPER,
    PSPRITE_SPEAR_MASK_YELLOW,
    PSPRITE_SPEAR_MASK_BLUE,
    PSPRITE_SPEAR_MASK_RED,
    PSPRITE_ROTATING_PLATFORM,
    PSPRITE_ROCK,
    PSPRITE_SKELETON_BIRD,
    PSPRITE_KAENTSUBO,
    PSPRITE_BOSS_CUCKOO_CONDOR,
    PSPRITE_TOTSUMEN,
    PSPRITE_PIG_HEAD_STATUE,
    PSPRITE_MOGURAMEN,
    PSPRITE_SPIKY,
    PSPRITE_SPIKY_Z,  // Harimen Zetto, Harimen being Spiky
    PSPRITE_BUBBLE,
    PSPRITE_TOGEROBO,
    PSPRITE_FALLING_SNOW,
    PSPRITE_TOGEMASUKU,
    PSPRITE_BALL_LIGHTNING,
    PSPRITE_ELECTRIC_LIFT_STATIONARY,
    PSPRITE_ELECTRIC_LIFT_VERTICAL,
    PSPRITE_ELECTRIC_LIFT_HORIZONTAL,
    PSPRITE_MAGIC_CARPET,
    PSPRITE_BOW_BALLOON,
    PSPRITE_CHANCE_WHEEL,
    PSPRITE_VORTEX,
    PSPRITE_MARUMEN_PURPLE,
    PSPRITE_MARUMEN_RED,
    PSPRITE_BOSS_SPOILED_ROTTEN,
    PSPRITE_DOMINOES_2D,
    PSPRITE_DOMINOES_2E,
    PSPRITE_DOMINOES_2F,
    PSPRITE_DOMINOES_30,
    PSPRITE_DOMINOES_31,
    PSPRITE_DOMINOES_32,
    PSPRITE_DOMINOES_33,
    PSPRITE_DOMINOES_34,
    PSPRITE_DOMINOES_35,
    PSPRITE_DOMINOES_36,
    PSPRITE_DOMINOES_37,
    PSPRITE_DOMINOES_38,
    PSPRITE_DOMINOES_39,
    PSPRITE_DOMINO_GOAL,
    PSPRITE_DICE_BLOCK,
    PSPRITE_MAYUBIRD,
    PSPRITE_MINICULA,
    PSPRITE_TOGETOGE,
    PSPRITE_GHOST,
    PSPRITE_BEEZLEY,
    PSPRITE_MONEY_FLOWER,
    PSPRITE_CATERPILLAR,
    PSPRITE_TOY_BLOCK_TRIANGLE,
    PSPRITE_TOY_BLOCK_TRIANGLE_LOCK,
    PSPRITE_TOY_BLOCK_SQUARE,
    PSPRITE_TOY_BLOCK_ROUND,
    PSPRITE_TOY_BLOCK_DOOR,
    PSPRITE_MENHANMA,
    PSPRITE_MENONO,
    PSPRITE_GOGGLEY_BLADE,
    PSPRITE_GOGGLEY_BLADE_2,
    PSPRITE_TOBAWANI,
    PSPRITE_SHIERAGUTCHI,
    PSPRITE_RINGOSUKI,
    PSPRITE_PISTON,
    PSPRITE_PISTON_2,
    PSPRITE_BOSS_CATBAT,
    PSPRITE_VORTEX_2,
    PSPRITE_SWINGING_PLATFORM,
    PSPRITE_SWINGING_PLATFORM_2,
    PSPRITE_ROTATING_PLATFORM_2,
    PSPRITE_ROTATING_PLATFORM_3,
    PSPRITE_PINBALL,
    PSPRITE_PINBALL_LOCK_UP,
    PSPRITE_PINBALL_LOCK_DOWN,
    PSPRITE_PINBALL_LOCK_LEFT,
    PSPRITE_PINBALL_LOCK_RIGHT,
    PSPRITE_PINBALL_COUNTER,
    PSPRITE_GOAL_BLOCK,
    PSPRITE_SPIKE_CANNON,
    PSPRITE_MONEY_SUNFLOWER,
    PSPRITE_YETI,
    PSPRITE_BOWLER,
    PSPRITE_MAGMA,
    PSPRITE_BOSS_DOOR_ENTRY_PASSAGE,
    PSPRITE_BOSS_DOOR_EMERALD_PASSAGE,
    PSPRITE_BOSS_DOOR_RUBY_PASSAGE,
    PSPRITE_BOSS_DOOR_TOPAZ_PASSAGE,
    PSPRITE_BOSS_DOOR_SAPPHIRE_PASSAGE,
    PSPRITE_BOSS_DOOR_GOLDEN_PYRAMID,
    PSPRITE_BOSS_AERODENT,
    PSPRITE_HOGGUS,
    PSPRITE_DENDEN,
    PSPRITE_BUTATABI,
    PSPRITE_DEBURINA,
    PSPRITE_FOLDING_DOOR,
    PSPRITE_PENCIL_PURPLE,
    PSPRITE_PENCIL_BLUE,
    PSPRITE_PENCIl_RED,
    PSPRITE_ROBOBIRD,
    PSPRITE_UTSUBOANKO,
    PSPRITE_TOGENOBI,
    PSPRITE_ICICLE,
    PSPRITE_BOSS_CRACTUS,
    PSPRITE_DICE,
    PSPRITE_TOY_CAR,
    PSPRITE_ONOMI,
    PSPRITE_BOSS_CORRIDOR_CAT,
    PSPRITE_PETBOTTOM,
    PSPRITE_GLASS_BIRD,
    PSPRITE_BOSS_GOLDEN_DIVA,
    PSPRITE_CHANDELIER,
    PSPRITE_CRUMBLING_BLOCK,
    PSPRITE_PROFESSOR_SHITAIN,
    PSPRITE_COIN_10POINTS,
    PSPRITE_COIN_50POINTS,
    PSPRITE_COIN_100POINTS,
    PSPRITE_COIN_500POINTS,
    PSPRITE_COIN_1000POINTS,
    PSPRITE_JEWEL_PIECE_NE,
    PSPRITE_JEWEL_PIECE_SE,
    PSPRITE_JEWEL_PIECE_SW,
    PSPRITE_JEWEL_PIECE_NW,
    PSPRITE_CD,
    PSPRITE_HEART_REFILL,
    PSPRITE_GLOW_JEWEL_PIECE_NE,
    PSPRITE_GLOW_JEWEL_PIECE_SE,
    PSPRITE_GLOW_JEWEL_PIECE_SW,
    PSPRITE_GLOW_JEWEL_PIECE_NW,
    PSPRITE_GLOW_CD,
    PSPRITE_GLOW_HEART_REFILL,
    PSPRITE_92,
    PSPRITE_93,
    PSPRITE_94,
    PSPRITE_95,
    PSPRITE_96,
    PSPRITE_97,
    PSPRITE_98,
    PSPRITE_99,
    PSPRITE_9A,
    PSPRITE_9B,
    PSPRITE_9C,
    PSPRITE_9D,
    PSPRITE_9E,
    PSPRITE_9F,
    PSPRITE_A0,
    PSPRITE_A1,
    PSPRITE_A2,
    PSPRITE_VORTEX_PART_LARGE,
    PSPRITE_VORTEX_PART_LARGE_2,
    PSPRITE_VORTEX_PART_MEDIUM,
    PSPRITE_VORTEX_PART_MEDIUM_2,
    PSPRITE_A7,
    PSPRITE_A8,
    PSPRITE_A9,
    PSPRITE_AA,
    PSPRITE_AB,
    PSPRITE_AC,
    PSPRITE_AD,
    PSPRITE_AE,
    PSPRITE_AF,
    PSPRITE_B0,
    PSPRITE_B1,
    PSPRITE_B2,
    PSPRITE_WARIO_EXITING_VORTEX,
    PSPRITE_WARIO_ENTERING_VORTEX,
    PSPRITE_B5,
    PSPRITE_B6,
    PSPRITE_CHANCE_WHEEL_DIAMOND,
    PSPRITE_B7,
    PSPRITE_B8,
    PSPRITE_B9,
    PSPRITE_BA,
    PSPRITE_BB,
    PSPRITE_BC,
    PSPRITE_BD,
    PSPRITE_BE,
    PSPRITE_BF,
    PSPRITE_C0,
    PSPRITE_C1,
    PSPRITE_C2,
    PSPRITE_C3,
    PSPRITE_C4,
    PSPRITE_C5,
    PSPRITE_C6,
    PSPRITE_C7,
    PSPRITE_C8,
    PSPRITE_C9,
    PSPRITE_CA,
    PSPRITE_CB,
    PSPRITE_CC,
    PSPRITE_0xCD,  // LMAO
    PSPRITE_CE,
    PSPRITE_CF,
    PSPRITE_D0,
    PSPRITE_D1,
    PSPRITE_D2,
    PSPRITE_KEYZER_ENTERING_PORTAL,
    PSPRITE_D4,
    PSPRITE_D5,
    PSPRITE_D6,
    PSPRITE_D7,
    PSPRITE_D8,
    PSPRITE_D9,
    PSPRITE_DA,
    PSPRITE_DB,
    PSPRITE_DC,
    PSPRITE_DD,
    PSPRITE_DE,
    PSPRITE_DF,
    PSPRITE_E0,
    PSPRITE_E1,
    PSPRITE_E2,
    PSPRITE_E3,
    PSPRITE_E4,
    PSPRITE_E5,
    PSPRITE_E6,
    PSPRITE_E7,
    PSPRITE_E8,
    PSPRITE_E9,
    PSPRITE_EA,
    PSPRITE_EB,
    PSPRITE_EC,
    PSPRITE_ED,
    PSPRITE_EE,
    PSPRITE_EF,
    PSPRITE_F0,
    PSPRITE_F1,
    PSPRITE_F2,
    PSPRITE_F3,
    PSPRITE_F4,
    PSPRITE_F5,
    PSPRITE_F6,
    PSPRITE_F7,
    PSPRITE_F8,
    PSPRITE_F9,
    PSPRITE_FA,
    PSPRITE_MAX
};

enum SpriteStatusBits {
    SPRITE_STATUS_NONE = 0,
    SPRITE_STATUS_EXISTS = (1 << 0),
    SPRITE_STATUS_1 = (1 << 1),
    SPRITE_STATUS_HIDDEN = (1 << 2),
    SPRITE_STATUS_3 = (1 << 3),
    SPRITE_STATUS_4 = (1 << 4),
    SPRITE_STATUS_5 = (1 << 5),
    SPRITE_STATUS_FACING_RIGHT = (1 << 6),
    SPRITE_STATUS_7 = (1 << 7),
    SPRITE_STATUS_8 = (1 << 8),
    SPRITE_STATUS_9 = (1 << 9),
    SPRITE_STATUS_10 = (1 << 10),
    SPRITE_STATUS_MAYBE_UNDERWATER = (1 << 11),
    SPRITE_STATUS_12 = (1 << 12),
    SPRITE_STATUS_13 = (1 << 13),
    SPRITE_STATUS_14 = (1 << 14),
    SPRITE_STATUS_15 = (1 << 15),
};

enum PersistentSpriteStatus {
    PERSISTENT_STATUS_UNLOADED,
    PERSISTENT_STATUS_LOADED,
    PERSISTENT_STATUS_DESPAWNED,
};


typedef struct {
    /* 0x00 */ u16 statusBits;
    /* 0x04 */ const void* pOamData;
    /* 0x08 */ u16 yPosition;
    /* 0x0A */ u16 xPosition;
    /* 0x0C */ u16 affinePA;
    /* 0x0E */ u16 affinePB;
    /* 0x10 */ u16 affinePC;
    /* 0x12 */ u16 affinePD;
    /* 0x14 */ u16 animationTimer;
    /* 0x16 */ u8 currentAnimationFrame;
    /* 0x17 */ u8 globalID;
    /* 0x18 */ u8 roomSlot;
    /* 0x19 */ u8 gfxSlot;
    /* 0x1A */ u8 drawPriority;
    /* 0x1B */ u8 palette;
    /* 0x1C */ u8 pose;
    /* 0x1D */ u8 health;
    /* 0x1E */ u8 warioInteractionFlags;
    /* 0x1F */ u8 disableWarioInteraction;
    /* 0x20 */ u8 drawDistanceDown;
    /* 0x21 */ u8 drawDistanceUp;
    /* 0x22 */ u8 drawDistanceLeftRight;
    /* 0x23 */ u8 hitboxExtentUp;
    /* 0x24 */ u8 hitboxExtentDown;
    /* 0x25 */ u8 hitboxExtentLeft;
    /* 0x26 */ u8 hitboxExtentRight;
    /* 0x27 */ u8 work0;
    /* 0x28 */ u8 work1;
    /* 0x29 */ u8 work2;
    /* 0x2A */ u8 work3;
} PrimarySpriteData;  /* size: 0x2C */


// Upper nybble = pose on next load
// Lower nybble = status
extern u8 gPersistentSpriteData[16][64];
#define MAKE_PERSISTENT_DATA(pose, status) (((pose) << 4) | (status))

extern PrimarySpriteData gCurrentSprite;


void Sprite_SpawnAsChild(u8 id, u8 roomSlot, u8 gfxSlot, u32 yPosition, u32 xPosition);
void func_801E430(u8 id, u8 roomSlot, u8 gfxSlot, u32 yPosition, u32 xPosition);

#endif  // SPRITE_H